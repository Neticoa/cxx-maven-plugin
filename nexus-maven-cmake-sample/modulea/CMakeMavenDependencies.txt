# Check if this is necessary :
#set(CURRENT_TARGET_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})
#if(${CMAKE_GENERATOR} MATCHES "Unix Makefiles" OR ${CMAKE_GENERATOR} MATCHES "MinGW Makefiles")
#    # Moni-config generator case
#    set(CURRENT_TARGET_BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}")
#    set_target_properties( ${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CURRENT_TARGET_BINARY_DIR} )
#    set_target_properties( ${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CURRENT_TARGET_BINARY_DIR} )
#else()
#    # Multi-config generator case
#    set(CURRENT_TARGET_BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}")
#    #set_target_properties( ${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} )
#    #set_target_properties( ${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_BUILD_TYPE} )
#    #set_target_properties( ${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_BUILD_TYPE} )
#endif()

# those lines shall be generated by cxx-maven-plugin :
function(ADD_MAVEN_DEPENDENCIES target)
    if (INJECT_MAVEN_DEPENDENCIES)
        message("Adding maven dependancies to target '${target}'")
        # BEGIN MAVEN_DEBUG_DEPENDENCIES
        target_link_libraries(${target} debug ${DEPENDENCY_DIR}/${TARGET_CLASSIFIER}/debug/moduleb/${SHARED_LIBRARY_PREFIX}ModuleB${SHARED_LIBRARY_SUFFIX})
        # END MAVEN_DEBUG_DEPENDENCIES
        # BEGIN MAVEN_OPTIMIZED_DEPENDENCIES
        target_link_libraries(${target} optimized ${DEPENDENCY_DIR}/${TARGET_CLASSIFIER}/release/moduleb/${SHARED_LIBRARY_PREFIX}ModuleB${SHARED_LIBRARY_SUFFIX})
        # END MAVEN_OPTIMIZED_DEPENDENCIES
        # BEGIN MAVEN_INCLUDE_ROOTS
        # END MAVEN_INCLUDE_ROOTS
    endif()
endfunction(ADD_MAVEN_DEPENDENCIES)
