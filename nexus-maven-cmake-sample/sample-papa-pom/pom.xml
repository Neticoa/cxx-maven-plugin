<?xml version='1.0' encoding='UTF-8'?>

<!--
Copyright (C) 2011-2016, Neticoa SAS France - Tous droits réservés.
Author(s) : Franck Bonin, Neticoa SAS France

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <parent>
    <groupId>fr.neticoa</groupId>
    <artifactId>cpp-super-pom</artifactId>
    <version>1.1.0.0</version>
    <!-- an empty <relativePath> so that maven resolves the parent pom from the .m2 cache or repositories.-->
    <relativePath></relativePath>
  </parent>
  
  <groupId>fr.neticoa</groupId>
  <!-- 'sample-papa-pom' is coming from pom generation -->
  <artifactId>sample-papa-pom</artifactId>
  <packaging>pom</packaging>
  <!-- set the Main project name here -->
  <name>sample-papa-pom</name>
  <version>1.0.0.0</version>
  
  <!-- set scm project location here -->
  <scm>
    <connection>scm:svn:https://svn/svn/cxxplugin/trunk/nexus-maven-cmake-sample/sample-papa-pom</connection>
    <developerConnection>scm:svn:https://svn/svn/cxxplugin/trunk/nexus-maven-cmake-sample/sample-papa-pom</developerConnection>
  </scm>

  <properties>
    <!-- use scm.dependencies.source.targetDir to force a sub dir when importing this artifact source from SCM infos -->
    <!-- <scm.dependencies.source.targetDir></scm.dependencies.source.targetDir> -->
  </properties>
  
  <!-- This profile allow usage of mixed link config for some component of you choice 
      To do so use following classifier :
    <classifier>bin-${targetClassifier}-${alternativeLinkConfig}</classifier>
      instead of default classifier :
    <classifier>bin-${targetClassifier}-${buildConfig}</classifier>
      when you declare concerned dependencies
      Then call mvn command line with the alternative link config of your choice :
    mvn clean install -D buildConfig=release -D alternativeLinkConfig=debug
    mvn clean install -D buildConfig=debug -D alternativeLinkConfig=release
    mvn clean install -D buildConfig=release -D alternativeLinkConfig=relinfo
    etc.
  -->
  <profiles>
    <profile>
      <id>alternativeLinkConfig</id>
      <activation>
        <property>
          <name>!alternativeLinkConfig</name>
        </property>
      </activation>
      <properties>
        <alternativeLinkConfig>${buildConfig}</alternativeLinkConfig>            
      </properties>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <!-- add pom, bin and interface dependencies version here -->
      <!--
      <dependency>
          <groupId>$(groupId)</groupId>
          <artifactId>component1</artifactId>
          <version>1.0.0.0</version>
          <classifier>interface</classifier>
          <type>zip</type>
          <optional>false</optional>
      </dependency>
      <dependency>
          <groupId>$(groupId)</groupId>
          <artifactId>component1</artifactId>
          <version>1.0.0.0</version>
          <classifier>bin-${targetClassifier}-${buildConfig}</classifier>
          <type>zip</type>
          <optional>false</optional>
      </dependency>

      <dependency>
          <groupId>$(groupId)</groupId>
          <artifactId>component2</artifactId>
          <version>1.0.0.0</version>
          <classifier>interface</classifier>
          <type>zip</type>
          <optional>false</optional>
      </dependency>
      <dependency>
          <groupId>$(groupId)</groupId>
          <artifactId>component2</artifactId>
          <version>1.0.0.0</version>
          <classifier>bin-${targetClassifier}-${buildConfig}</classifier>
          <type>zip</type>
          <optional>false</optional>
      </dependency>
      -->
    </dependencies>
  </dependencyManagement>

  <build>
    <!-- Todo define your own plugin version in your project parent POM -->
    <pluginManagement>
      <plugins>
        <!--
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cxx-maven-plugin</artifactId>
          <version>0.0.6-SNAPSHOT</version>
        </plugin>
        -->
        <!-- see http://site.supose.org/doxygen-maven-plugin/ -->
        <!--
        <plugin>
          <groupId>com.soebes.maven.plugins.dmg</groupId>
          <artifactId>doxygen-maven-plugin</artifactId>
          <version>1.0.1</version>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>sonar-maven-plugin</artifactId>
          <version>2.6</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <plugin>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.10</version>
        </plugin>
        <plugin>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.7</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <plugin>
          <artifactId>gmaven-plugin</artifactId>
          <version>1.5</version>
        </plugin>
        <plugin>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.9.4</version>
        </plugin>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
        -->
      </plugins>
    </pluginManagement>

  </build>
</project>
