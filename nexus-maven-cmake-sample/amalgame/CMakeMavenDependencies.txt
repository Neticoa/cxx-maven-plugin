#
# Copyright (C) 2011-2016, Neticoa SAS France - Tous droits réservés.
# Author(s) : Franck Bonin, Neticoa SAS France
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Check if this is necessary :
#set(CURRENT_TARGET_BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR})
#if(${CMAKE_GENERATOR} MATCHES "Unix Makefiles" OR ${CMAKE_GENERATOR} MATCHES "MinGW Makefiles")
#    # Mono-config generator case
#    set(CURRENT_TARGET_BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}")
#    set_target_properties( ${TARGET_NAME} PROPERTIES RUNTIME_OUTPUT_DIRECTORY ${CURRENT_TARGET_BINARY_DIR} )
#    set_target_properties( ${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CURRENT_TARGET_BINARY_DIR} )
#else()
#    # Multi-config generator case
#    set(CURRENT_TARGET_BINARY_DIR "${CMAKE_CURRENT_BINARY_DIR}")
#    #set_target_properties( ${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR} )
#    #set_target_properties( ${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_DEBUG ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_BUILD_TYPE} )
#    #set_target_properties( ${TARGET_NAME} PROPERTIES LIBRARY_OUTPUT_DIRECTORY_RELEASE ${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_BUILD_TYPE} )
#endif()

# those lines shall be generated by cxx-maven-plugin :
function(ADD_MAVEN_DEPENDENCIES target)
    if (INJECT_MAVEN_DEPENDENCIES)
        message("Adding maven dependancies to target '${target}'")
        # BEGIN MAVEN_DEBUG_DEPENDENCIES
        # END MAVEN_DEBUG_DEPENDENCIES
        # BEGIN MAVEN_OPTIMIZED_DEPENDENCIES
        # END MAVEN_OPTIMIZED_DEPENDENCIES
        # BEGIN MAVEN_INCLUDE_ROOTS
        include_directories( 
        "../sample/sample/include/"
        "../modulea/modulea/include/"
        "../moduleb/moduleb/include/"
        )
        message("Adding '../sample/sample/include/' additional include root.")
        message("Adding '../modulea/modulea/include/' additional include root.")
        message("Adding '../moduleb/moduleb/include/' additional include root.")
        # END MAVEN_INCLUDE_ROOTS
    endif()
endfunction(ADD_MAVEN_DEPENDENCIES)
